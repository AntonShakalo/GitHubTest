Прежде чем я начну, короткое замечание: поздравления с наилучшими пожеланиями Дэвиду Джонсону, текущему президенту моей alma mater, Университета Ватерлоо. Королева назначила его следующим Генерал-Губернатором Канады и он приступает к своим полномочиям в октябре. Для тех из вас, кто не знаком с политической структурой Канады, Ее Величество Елизавета II является главой государства, Генерал-Губернатор является ее прямым представителем в Канаде и, таким образом является (в основном номинально, но иногда и реально) главой государства.

Продолжим!

Хорошо, у нас есть класс нашего графа. В общих чертах алгоритм поиска цветов будет следующим: для каждого узла графа найти набор «возможных цветов», а затем постепенно уменьшать этот набор для каждого узла до тех пор, пока мы не удостоверимся, что соответствующей цветовой схемы не существует, или пока не найдем в точности по одному цвету для каждого узла. Таким образом, нам нужен тип для представления набора возможных цветов.

Прежде всего, какой тип должен представлять цвет? В BCL существует перечисление Color, но то ли это, что нам нужно? Мы, скорее всего будем задавать вопросы типа: «использует ли эта цветовая схема раскраски графа только три цвета?», а не вопросы типа: «является ли это раскраской графа, которая использует зеленый, синий и оранжевый цвета?» Точные цвета нам, на самом деле, не важны. Давайте представим цвет в виде целого числа от 0 до max – 1. Если захотим, мы всегда сможем найти соответствие между целыми числами и цветами.

Обратите внимание, что это проектное решение сразу приводит к нескольким возможным неоднозначностям; в последний раз мы говорили о том, что узлы дерева мы также представляем целыми числами. Если бы меня это действительно беспокоило, то я мог бы создать две разные структуры, содержащие целое число, скажем, GraphNode и GraphColor. Это позволило бы компилятору говорить мне, если бы я случайно попытался присвоить цвет переменной, которая логически является узлом.

Это непростой выбор. На одной чаше весов лежат время и усилия на реализацию и сопровождения ненужных структур данных, а на другой чаше – время и усилия, потраченные на неожиданные ошибки. Стоит ли результат потраченных усилий? Мне кажется, что в этом случае – нет. Пока что я не собираюсь реализовывать эти структуры данных.

Итак, цвет – это простое целое число. Я хочу представить набор простых целых чисел. Класс HashSet<int> кажется подходящим готовым решением, но с его использованием связан ряд проблем. Во-первых, изменяемость (mutable); частично, целью этого упражнения является программирование в «неизменяемом» стиле. Во-вторых, он тяжеловесный; для хранения набора целых чисел он выделяет массивы, хэш-блоки и всякую такую ерунду.